#BlueJ class context
comment0.target=BinaryClassification
comment0.text=\r\n\ Write\ a\ description\ of\ class\ BinaryClassification\ here.\r\n\r\n\ @author\ (Nathan\ Beal)\r\n\ @version\ (1.0.0\ -\ 12/15/20)\r\n
comment1.params=
comment1.target=BinaryClassification()
comment10.params=jockeyName\ place
comment10.target=void\ updateJockeyRecord(java.lang.String,\ int)
comment11.params=horsesInRace\ genData\ racerData
comment11.target=void\ dataPrep(java.lang.String,\ java.util.ArrayList,\ java.util.ArrayList)
comment12.params=
comment12.target=void\ writeToCSV()
comment13.params=oDate\ currentDate
comment13.target=java.lang.String\ lastRace(java.lang.String,\ java.lang.String)
comment14.params=groupedData\ timeSinceLR
comment14.target=java.lang.String[]\ pastPerformance(java.lang.String,\ java.lang.String)
comment15.params=dataPieces
comment15.target=java.lang.String[]\ horseAndJockey(java.lang.String[])
comment16.params=dataPieces
comment16.target=java.util.ArrayList\ retrieveOdd(java.lang.String[])
comment17.params=dataPieces\ dist
comment17.target=java.lang.String\ horse(java.lang.String[],\ java.lang.String)
comment18.params=currHorse\ place\ numberOfRaceHorses\ dist\ firstRace\ lines\ lowerBound\ upperBound
comment18.target=java.util.ArrayList\ refreshHorseList(java.lang.String,\ double,\ double,\ java.lang.String,\ boolean,\ java.lang.String[],\ int,\ int)
comment19.params=lines
comment19.target=java.lang.String[]\ retrieveDate(java.lang.String[])
comment2.params=
comment2.target=void\ main()
comment20.params=lines
comment20.target=java.lang.String\ trackType(java.lang.String[])
comment21.params=lines
comment21.target=java.lang.String\ weather(java.lang.String[])
comment22.params=lines
comment22.target=java.lang.String\ distance(java.lang.String[])
comment23.params=lines
comment23.target=java.lang.String\ trackCondition(java.lang.String[])
comment24.params=lines
comment24.target=java.lang.String\ raceNumber(java.lang.String[])
comment25.params=
comment25.target=void\ showError()
comment26.params=lines\ place\ lBound\ hBound
comment26.target=double\ calculateSPRAT(java.lang.String[],\ double,\ int,\ int)
comment27.params=hName\ s
comment27.target=java.lang.String\ updateAVESPRAT(java.lang.String,\ double)
comment28.params=hName\ s
comment28.target=java.lang.String\ updateSPRAT(java.lang.String,\ double)
comment29.params=hName\ dist
comment29.target=java.lang.String\ updateNewDist(java.lang.String,\ java.lang.String)
comment3.params=fileExt
comment3.target=void\ run(java.lang.String)
comment30.params=j\ place
comment30.target=void\ updateRecord(java.lang.String,\ int)
comment31.params=j\ dist
comment31.target=void\ updateDistances(java.lang.String,\ java.lang.String)
comment4.params=numPages\ pages
comment4.target=int\ calcAdditionalGap(int,\ java.lang.String[])
comment5.params=lines
comment5.target=boolean\ checkDocument(java.lang.String[])
comment6.params=lines
comment6.target=java.util.ArrayList\ racerData(java.lang.String[])
comment7.params=jockeyName
comment7.target=boolean\ checkJockeyList(java.lang.String)
comment8.params=jockeyName
comment8.target=java.util.ArrayList\ retrieveJockeyRecord(java.lang.String)
comment9.params=jockeyName\ place
comment9.target=void\ addJockey(java.lang.String,\ int)
numComments=32
